@using DiaryManagement.Core.Entities;
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@model List<DiaryManagement.Core.Entities.Diary>
@{
    ViewData["Title"] = "All Diarys";
    Layout = "/Views/Shared/_MainLayout.cshtml";
    var categories = (List<Category>) ViewData["Categories"];
    int page = (int) ViewData["CurrentPage"];
    string categoryId = ViewData["CategoryId"].ToString();
    int totalPage = (int) ViewData["TotalPage"];
    string orderByName = ViewData["OrderByName"].ToString();
    string keyword = ViewData["Keyword"].ToString();
    var parms = new Dictionary<string, string>();
}
<div class="s003">
    <form method="GET" asp-controller="Home" asp-action="AllDiarys">
        <div class="inner-form rounded">
            

            <div class="input-field first-wrap pt-3">
                <div class="input-select ">
                    <select data-trigger="" name="orderByName">
                        <option value="ASC" selected>ASC</option>
                        @if (orderByName == "DESC")
                        {

                            <option value="DESC" selected>DESC</option>
                        }
                        else
                        {
                            <option value="DESC">DESC</option>
                        }
                       
                    </select>
                </div>
            </div>
            <div class="input-field first-wrap pt-3">
                <div class="input-select ">
                    <select data-trigger="" name="categoryId">
                        <option value="All" selected>All</option>
                        @foreach (var c in categories)
                        {
                            if (c.CategoryId.Equals(categoryId))
                            {
                                <option value="@c.CategoryId" selected>@c.CategoryName</option>
                            }
                            else
                            {
                                <option value="@c.CategoryId">@c.CategoryName</option>

                            }
                        }
                    </select>
                </div>
            </div>
            <div class="input-field second-wrap">
                 <input id="search" name="keyword" type="text" value="@keyword" placeholder="Enter Diary name or Writer..." />
            </div>
            <input name="page" value="1" hidden />
            <div class="input-field third-wrap">
                <button class="btn-search btn btn-primary" style="" type="submit">
                    <svg class="svg-inline--fa fa-search fa-w-16" aria-hidden="true" data-prefix="fas" data-icon="search" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"></path>
                    </svg>
                </button>
            </div>
        </div>
    </form>
</div>
<section class="layout_padding">
    <div class="container">

        <div class="row">
            @foreach (var Diary in Model)
            {
                parms.Clear();
                parms["DiaryId"] = Diary.DiaryId;
                string WriterDiary = "";
                foreach (var ab in Diary.WriterDiarys)
                {
                    WriterDiary += $"{ab.Writer.WriterName}, ";
                }
                WriterDiary = WriterDiary.Remove(WriterDiary.Length - 2);
                <article class="article-recent rounded border border-2 p-3 mt-5">
                    <div class="article-recent-main">
                        <h2 class="article-title">@Diary.DiaryName</h2>
                        <p class="article-body">@Diary.Content</p>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <a asp-controller="Home" asp-action="GetDiaryDetail" asp-all-route-data="@parms"
                               class="article-read-more">
                                CONTINUE READING
                            </a>

                        }
                        else
                        {
                            <a class="article-read-more" asp-area="Authentication" asp-controller="Authentication"
                               asp-action="Login">
                                CONTINUE READING
                            </a>
                        }>
                    </div>
                    <div class="article-recent-secondary">
                        <img src="@Diary.Image" alt="a green plant in a clear, round vase with water in it"
                             class="article-image">
                        <p class="article-info">@Diary.CreationDate.GetDateTimeFormats()[0] | @Diary.ViewCount Views</p>
                    </div>
                </article>
            }
        </div>
    </div>
</section>

<div class="pagination text-center mb-5">
    <span>
        @if (page > 1)
        {
            <a id="prev" class="index btn-primary">Prev</a>
        }
        @for(int i = 1; i <= totalPage; i++)
        {
            if (i == page)
            {
                <a class="rounded border border-2">
                    <div class="index text-dark">@i</div>
                </a>

            }
            else
            {
                <a class="rounded border border-2">
                    <div class="index">@i</div>
                </a>
            }
        }
        @if (page < totalPage)
        {
            <a id="next" class="index btn-primary">Next</a>
        }   
    </span>
</div>

<link rel="stylesheet" href="/css/pagination.css">
<script src="/js/search-bar/choices.js"></script>
@{
    int nextPage = page + 1;
    int prevPage = page - 1;
}
<script>
    var path = window.location.href;
    fullPrevPath = path.slice(0, -1) + @prevPage;
    fullNextPath = path.slice(0, -1) + @nextPage;
    var prevLink = document.getElementById("prev");
    var nextLink = document.getElementById("next");
    if (prevLink !== null) prevLink.href = fullPrevPath;
    if (nextLink !== null) nextLink.href = fullNextPath;
    const choices = new Choices('[data-trigger]',
        {
            searchEnabled: false,
            itemSelectText: '',
        });
</script>
